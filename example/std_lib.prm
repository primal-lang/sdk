# Object

object(key1: string, value1: T, ...): {T}
keys(object: {T}): [string]
containsKey(a: string, object: {T}): bool
isEmpty(object: {T}): bool
isNotEmpty(object: {T}): bool
get(field: string, object: {T}): T -> object(field: string): {T}
set(field: string, value: T, object: {T}): {T} -> object(field: string, value: T): {T}
remove(field: string, object: {T}): {T}
clear(object: {T}): {T}

# Functions

map(func: function, list: [T]): [T]
filter(func: function, list: [T]): [T]
reduce(func: function, list: [T], initial: T): T
sort(func: function, list: [T]): [T]
all(func: function, list: [T]): bool
any(func: function, list: [T]): bool
zip(func: function, list1: [T], list2: [T]): [T]